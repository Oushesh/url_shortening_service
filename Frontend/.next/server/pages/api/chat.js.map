{"version":3,"file":"pages/api/chat.js","mappings":"qIAGQ,GAAAA,EAAAC,CAAA,IAER,IAAAC,EAAkBC,EAAQ,KAC1BC,EAAAF,EAAAG,UAAA,EAAAH,EAAAI,OAAA,CAEA,sBAAAF,EACA,mFAGuB,SAAAG,EAAUC,CAAA,EACjC,MAAiB,GAAAR,EAAAS,CAAA,EAAO,CACxB,GAAAD,CAAA,CACAE,KAAA,YACAN,QAAAA,CACA,EACA,kCChBOO,ECFP,SAAAC,EAAAC,CAAA,EACA,IAAAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEA,OADAC,IACA,CACAC,KAYA,SAAAC,CAAA,EACAR,EAAAA,EAAAA,EAAAQ,EAAAA,CAAA,CACAT,GAAAU,EAAAT,IACAA,CAAAA,EAAAA,EAAAU,KAAA,CAAAC,EAAAC,MAAA,GAEAb,EAAA,GACA,IAAAa,EAAAZ,EAAAY,MAAA,CACAC,EAAA,EACAC,EAAA,GACA,KAAAD,EAAAD,GAAA,KASAG,EARAD,IACA,OAAAd,CAAA,CAAAa,EAAA,EACA,EAAAA,EAEAC,EAAA,IAEA,IAAAE,EAAA,GACAC,EAAAf,EAEA,QAAAgB,EAAAjB,EAAyCe,EAAA,GAAAE,EAAAN,EAAkC,EAAAM,EAE3EH,MADAA,CAAAA,EAAAf,CAAA,CAAAkB,EAAA,GACAD,EAAA,EACAA,EAAAC,EAAAL,EACUE,OAAAA,GACVD,EAAA,GACAE,EAAAE,EAAAL,GACU,OAAAE,GACVC,CAAAA,EAAAE,EAAAL,CAAA,EAGA,GAAAG,EAAA,GACAf,EAAAW,EAAAC,EACAX,EAAAe,EACA,MAIA,EAFA,EACAf,EAAA,GAEAiB,SASAC,CAAA,CAAAF,CAAA,CAAAD,CAAA,CAAAD,CAAA,EACA,GAAAA,IAAAA,EAAA,CACAX,EAAAO,MAAA,KACAd,EAAA,CACAuB,KAAA,QACAC,GAAAnB,EACAoB,MAAAnB,GAAA,OACAC,KAAAA,EAAAK,KAAA,MAEA,GAEAL,EAAA,GACAF,EAAA,QAEAC,EAAA,OACA,MACA,KACAoB,EAAAP,EAAA,EACAQ,EAAAL,EAAAV,KAAA,CAAAQ,EAAAA,EAAAM,CAAAA,EAAAR,EAAAC,CAAA,GACAS,EAAA,EAEAA,EADAF,EACAR,EACMI,MAAAA,CAAA,CAAAF,EAAAD,EAAA,GACNA,EAAA,EAEAA,EAAA,EAEA,IAAAJ,EAAAK,EAAAQ,EACAC,EAAAX,EAAAU,EACAE,EAAAR,EAAAV,KAAA,CAAAG,EAAAA,EAAAc,GAAAE,QAAA,GACA,GAAAJ,SAAAA,EACApB,GAAAuB,EAAA,GAAAE,MAAA,CAAAF,EAAA,gBACM,GAAAH,UAAAA,EACNrB,EAAAwB,OACM,GAAAH,OAAAA,GAAAG,EAAAG,QAAA,SAEA,IAAAN,UAAAA,EAAA,CACN,IAAAO,EAAAC,SAAAL,EAAA,IACAM,OAAAC,KAAA,CAAAH,IACAlC,EAAA,CACAuB,KAAA,qBACAO,MAAAI,CACA,EAEA,OATA7B,EAAAyB,CASA,EArDA5B,EAAAa,EAAAI,EAAAD,GACAH,GAAAG,EAAA,CACA,CACAH,IAAAD,EACAZ,EAAA,GACMa,EAAA,GACNb,CAAAA,EAAAA,EAAAU,KAAA,CAAAG,EAAA,CAEA,EAzDAP,MAAAA,CACA,EACA,SAAAA,GAAA,CACAP,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,GACAC,EAAA,OACAC,EAAA,OACAC,EAAA,EACA,CA8FA,4CDjHYT,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EACVwC,aAAAA,CAAgB,gBCiHlB,IAAAzB,EAAA,cACA,SAAAF,EAAAT,CAAA,EACA,OAAAW,EAAA0B,KAAA,EAAAC,EAAApB,IAAAlB,EAAAuC,UAAA,CAAArB,KAAAoB,EACA,CCpHO,IAAME,EAAe,MAAOC,GAAwB,CACzD,IAAMC,EAAU,IAAIC,YACdC,EAAU,IAAIC,YAEdC,EAAM,MAAMC,MAAM,6CAA8C,CACpEC,QAAS,CACP,eAAgB,mBAChBC,cAAe,CAAC,OAAO,EAAEC,QAAQC,GAAG,CAACC,cAAc,CAAC,CAAC,EAEvDC,OAAQ,OACRC,KAAMC,KAAKC,SAAS,CAAC,CACnBC,MAAO7D,EAAAA,aAAyB,CAChC6C,SAAU,CACR,CACEiB,KAAM,SACNC,QAAS,yCACX,KACGlB,EACJ,CACDmB,WAAY,IACZC,YAAa,EACbC,OAAQ,EACV,EACF,GAEA,GAAIhB,MAAAA,EAAIiB,MAAM,CACZ,MAAM,MAAU,+BAAgC,CAGlD,IAAMD,EAAS,IAAIE,eAAe,CAChC,MAAMC,MAAMC,CAAU,CAAE,CACtB,IAAMpE,EAAU,GAA4C,CAC1D,GAAIyB,UAAAA,EAAMF,IAAI,CAAc,CAC1B,IAAMhB,EAAOkB,EAAMlB,IAAI,CAEvB,GAAIA,WAAAA,EAAmB,CACrB6D,EAAWC,KAAK,GAChB,MACF,CAAC,GAEG,CACF,IAAMC,EAAOb,KAAKc,KAAK,CAAChE,GAClBiE,EAAOF,EAAKG,OAAO,CAAC,EAAE,CAACC,KAAK,CAACb,OAAO,CACpCc,EAAQ/B,EAAQgC,MAAM,CAACJ,GAC7BJ,EAAWS,OAAO,CAACF,EACrB,CAAE,MAAOG,EAAG,CACVV,EAAWW,KAAK,CAACD,EACnB,CACF,CAAC,EAGGE,EAASjF,EAAaC,GAE5B,UAAW,IAAMU,KAASsC,EAAIQ,IAAI,CAChCwB,EAAOvE,IAAI,CAACqC,EAAQmC,MAAM,CAACvE,GAE/B,CACF,GAEA,OAAOsD,CACT,EC5DakB,EAAS,CACpBC,QAAS,MACX,EAEM5F,EAAU,MAAO6F,GAAoC,CACzD,GAAI,CACF,GAAM,CAAEzC,SAAAA,CAAAA,CAAU,CAAI,MAAMyC,EAAId,IAAI,GAKhCe,EAAY,EACZC,EAAiB,EAAE,CAGvB,IAAK,IAAIC,EAAI,EAAGA,EAAI5C,EAAS7B,MAAM,CAAEyE,IAAK,CACxC,IAAMC,EAAU7C,CAAQ,CAAC4C,EAAE,CAC3B,GAAI,iBAAOC,EAAQ3B,OAAO,CAAe,CACzC,GAAIwB,EAAYG,EAAQ3B,OAAO,CAAC/C,MAAM,CARtB,KASd,KAAM,CAGRuE,GAAaG,EAAQ3B,OAAO,CAAC/C,MAAM,CACpC,EACgB2E,IAAI,CAACD,EACtB,CAGA,IAAMxB,EAAS,MAAMtB,EAAa4C,GAElC,OAAO,IAAII,SAAS1B,EACtB,CAAE,MAAOe,EAAO,CAEd,OADAY,QAAQZ,KAAK,CAACA,GACP,IAAIW,SAAS,QAAS,CAAEzB,OAAQ,GAAI,EAC7C,CACF,EAEA2B,EAAerG,wDCxCR,OAAAsG,UAAAC,MACPC,YAAA,CAAkBlG,KAAAA,CAAA,CAAO,EACzB,yBAAiCA,EAAK;;;;;;;EAOtC,EACA,CACA,CACO,MAAAmG,UAAAF,MACPC,aAAA,CACA;;EAEA,EACA,CACA,CACO,MAAAE,UAAAH,MACPC,aAAA,CACA;;EAEA,EACA,CACA,CCzBO,SAAAG,EAAAC,CAAA,EACP,IAAAjD,EAAA,IAAAkD,QACA,QAAAC,EAAAvE,EAAA,GAAAwE,OAAAC,OAAA,CAAAJ,GAAA,CACA,IAAAK,EAAAC,MAAAC,OAAA,CAAA5E,GAAAA,EAAA,CACAA,EACA,CACA,QAAA6E,KAAAH,EACAI,KAAAA,IAAAD,GACAzD,EAAA2D,MAAA,CAAAR,EAAAM,EAGA,CACA,OAAAzD,CACA,CAUU,SAAA4D,EAAAC,CAAA,EACV,IAEA5C,EACA6C,EACAC,EACAC,EACAC,EANAC,EAAA,GACAC,EAAA,EAMA,SAAAC,GAAA,CACA,KAAAD,EAAAN,EAAAjG,MAAA,OAAAyG,IAAA,CAAAR,EAAAS,MAAA,CAAAH,KACAA,GAAA,EAEA,OAAAA,EAAAN,EAAAjG,MAAA,CAMA,KAAAuG,EAAAN,EAAAjG,MAAA,GAGA,IAFAqD,EAAAkD,EACAF,EAAA,GACAG,KAEA,GAAAN,MADAA,CAAAA,EAAAD,EAAAS,MAAA,CAAAH,EAAA,EACA,CAMA,IAJAJ,EAAAI,EACAA,GAAA,EACAC,IACAJ,EAAAG,EACAA,EAAAN,EAAAjG,MAAA,EAbAkG,MADAA,CAAAA,EAAAD,EAAAS,MAAA,CAAAH,EAAA,GACAL,MAAAA,GAAsCA,MAAAA,GActCK,GAAA,CAGAA,CAAAA,EAAAN,EAAAjG,MAAA,EAAAiG,MAAAA,EAAAS,MAAA,CAAAH,IAEAF,EAAA,GAEAE,EAAAH,EACAE,EAAA3B,IAAA,CAAAsB,EAAAU,SAAA,CAAAtD,EAAA8C,IACA9C,EAAAkD,GAIAA,EAAAJ,EAAA,CAEA,MACAI,GAAA,CACA,CAEA,EAAAF,GAAAE,GAAAN,EAAAjG,MAAA,GACAsG,EAAA3B,IAAA,CAAAsB,EAAAU,SAAA,CAAAtD,EAAA4C,EAAAjG,MAAA,EAEA,CACA,OAAAsG,CACA,CACO,SAAAM,EAAAxE,CAAA,EACP,IAAAyE,EAAA,GACA,GAAAzE,EACA,QAAAmD,EAAAvE,EAAA,GAAAoB,EAAAqD,OAAA,GACAoB,CAAA,CAAAtB,EAAA,CAAAvE,EACA,eAAAuE,EAAAuB,WAAA,IACAD,CAAAA,CAAA,CAAAtB,EAAA,CAAAS,EAAAhF,EAAA,CAGA,CACA,OAAA6F,CACA,CAGW,SAAAE,EAAAC,CAAA,EACX,IACA,OAAAC,OAAA,IAAAC,IAAAD,OAAAD,IACA,CAAM,MAAA/C,EAAA,CACN,iCAA6CgD,OAAAD,GAAY,+FACzDG,MAAAlD,CACA,EAAS,CAET,CCnGA,IAAAmD,EAAAC,OAAA,YACAC,EAAAD,OAAA,eACOE,EAAAF,OAAA,YACP,OAAAG,EACA,CAAAD,EAAA,KACAD,EAAA,gBAEAG,CAAA,GACAC,YAAAC,CAAA,EACA,KAAAP,EAAA,EACA,MAAAA,EAAA,CAAAQ,QAAAC,OAAA,CAAAF,EAAA,CAEA,CACAG,wBAAA,CACA,KAAAR,EAAA,GACA,CACAS,UAAAC,CAAA,EACA,KAAAT,EAAA,CAAA5C,IAAA,CAAAqD,EACA,CACA,CACO,MAAAC,UAAAT,EACPvC,YAAAiD,CAAA,EACA,MAAAA,EAAAC,OAAA,EACA,KAAAC,UAAA,CAAAF,EAAAnJ,IAAA,CAMA,IAAAoJ,SAAA,CACA,UAAkBpD,EAAkB,CACpChG,KAAA,KAAAqJ,UAAA,EACS,CAMTV,aAAA,CACA,UAAkB3C,EAAkB,CACpChG,KAAA,KAAAqJ,UAAA,EACS,CAET,CC5CO,SAASC,EAAmBC,CAAW,CAAEC,CAAQ,CAAEC,CAAc,CAAE,CACtE,IAAIC,EACJ,GAAIH,EAIA,IAAK,IAAMI,KAHPF,GACAA,CAAAA,EAAiBA,EAAe1B,WAAW,IAE5BwB,GAAY,CAC3B,IAAIK,EAAKC,EAET,IAAMC,EAAiB,IAA2B,EAA1BF,CAAAA,EAAMD,EAAKI,MAAM,EAAY,KAAK,EAAIH,EAAII,KAAK,CAAC,IAAI,CAAC,EAAE,CAACjC,WAAW,EAAE,CAC7F,GAAIyB,IAAaM,GAAkBL,IAAmBE,EAAKM,aAAa,CAAClC,WAAW,IAAO,KAA6B,EAA5B8B,CAAAA,EAAOF,EAAKO,OAAO,EAAY,KAAK,EAAIL,EAAKM,IAAI,CAAC,GAAUC,EAAOrC,WAAW,KAAO0B,EAAe,EAAG,CAC/LC,EAAaC,EACb,KAAM,CACT,CAER,OACMD,CACX,CCXW,SAASW,EAAoBC,CAAK,CAAE,CAC3C,OAAOA,EAAMC,OAAO,CAAC,MAAO,KAAO,GACvC,CCJW,SAASC,EAAUC,CAAI,CAAE,CAChC,IAAMC,EAAYD,EAAKE,OAAO,CAAC,KACzBC,EAAaH,EAAKE,OAAO,CAAC,KAC1BE,EAAWD,EAAa,IAAOF,CAAAA,EAAY,GAAKE,EAAaF,CAAAA,SACnE,GAAgBA,EAAY,GACjB,CACHI,SAAUL,EAAK7C,SAAS,CAAC,EAAGiD,EAAWD,EAAaF,CAAS,EAC7DK,MAAOF,EAAWJ,EAAK7C,SAAS,CAACgD,EAAYF,EAAY,GAAKA,EAAY3D,KAAAA,CAAS,EAAI,EAAE,CACzFiE,KAAMN,EAAY,GAAKD,EAAK1J,KAAK,CAAC2J,GAAa,EAAE,EAGlD,CACHI,SAAUL,EACVM,MAAO,GACPC,KAAM,EACV,CALC,CCVM,SAASC,EAAcR,CAAI,CAAES,CAAM,CAAE,CAC5C,GAAI,CAACT,EAAKU,UAAU,CAAC,MAAQ,CAACD,EAC1B,OAAOT,CACV,CACD,GAAM,CAAEK,SAAAA,CAAAA,CAAWC,MAAAA,CAAAA,CAAQC,KAAAA,CAAAA,CAAO,CAAGR,EAAUC,GAC/C,MAAO,CAAC,EAAES,EAAO,EAAEJ,EAAS,EAAEC,EAAM,EAAEC,EAAK,CAAC,CCJrC,SAASI,EAAcX,CAAI,CAAEY,CAAM,CAAE,CAC5C,GAAI,CAACZ,EAAKU,UAAU,CAAC,MAAQ,CAACE,EAC1B,OAAOZ,CACV,CACD,GAAM,CAAEK,SAAAA,CAAAA,CAAWC,MAAAA,CAAAA,CAAQC,KAAAA,CAAAA,CAAO,CAAGR,EAAUC,GAC/C,MAAO,CAAC,EAAEK,EAAS,EAAEO,EAAO,EAAEN,EAAM,EAAEC,EAAK,CAAC,CCHrC,SAASM,EAAcb,CAAI,CAAES,CAAM,CAAE,CAC5C,GAAI,iBAAOT,EACP,MAAO,EACV,CACD,GAAM,CAAEK,SAAAA,CAAAA,CAAW,CAAGN,EAAUC,GAChC,OAAOK,IAAaI,GAAUJ,EAASK,UAAU,CAACD,EAAS,IAC/D,CCPW,SAASK,EAAUd,CAAI,CAAEL,CAAM,CAAEH,CAAa,CAAEuB,CAAY,CAAE,QACrE,GAAcpB,IAAWH,GAAkBuB,CAAAA,GAAgB,CAACF,EAAcb,EAAK1C,WAAW,GAAI,CAAC,CAAC,EAAEqC,EAAOrC,WAAW,GAAG,CAAC,GAAK,CAACuD,EAAcb,EAAK1C,WAAW,GAAI,SACrJkD,EAAcR,EAAM,CAAC,CAAC,EAAEL,EAAO,CAAC,EAEpCK,CADN,CCLE,SAASgB,EAAuBC,CAAI,CAAE,CACzC,IAAIZ,EAAWS,EAAUG,EAAKZ,QAAQ,CAAEY,EAAKtB,MAAM,CAAEsB,EAAKC,OAAO,CAAG5E,KAAAA,EAAY2E,EAAKzB,aAAa,CAAEyB,EAAKF,YAAY,EAQrH,MAPIE,CAAAA,EAAKC,OAAO,EAAI,CAACD,EAAKE,aAAa,GACnCd,CAAAA,EAAWT,EAAoBS,EAAAA,EAE/BY,EAAKC,OAAO,EACZb,CAAAA,EAAWM,EAAcH,EAAcH,EAAU,CAAC,YAAY,EAAEY,EAAKC,OAAO,CAAC,CAAC,EAAGD,MAAAA,EAAKZ,QAAQ,CAAW,aAAe,OAAO,GAEnIA,EAAWG,EAAcH,EAAUY,EAAKG,QAAQ,EACzC,CAACH,EAAKC,OAAO,EAAID,EAAKE,aAAa,CAAG,EAAUE,QAAQ,CAAC,KAAsChB,EAA/BM,EAAcN,EAAU,IAAe,CAAGT,EAAoBS,EAAS,CCRvI,SAASiB,EAAYC,CAAM,CAAE3I,CAAO,CAAE,CAC7C,IAAIuG,EACJ,OAAO,IAAuI,EAAtIA,CAAAA,EAAM,CAAChD,MAAMC,OAAO,CAACxD,IAAe,EAAfA,EAAkB,KAAK,EAAIA,EAAQ4I,IAAI,GAAM5I,CAAAA,IAAe,EAAfA,EAAkB,KAAK,EAAIA,EAAQ4I,IAAI,GAAKD,EAAOxC,QAAQ,EAAY,KAAK,EAAII,EAAII,KAAK,CAAC,IAAI,CAAC,EAAE,CAACjC,WAAW,EAAE,CCClL,SAASmE,EAAoBpB,CAAQ,CAAEZ,CAAO,CAAE,KACnDT,EAEJ,IAAM0C,EAAgBrB,EAASd,KAAK,CAAC,KAUrC,MATCE,CAAAA,GAAW,EAAE,EAAEC,IAAI,CAAC,GACjB,EAAIgC,CAAa,CAAC,EAAE,EAAIA,CAAa,CAAC,EAAE,CAACpE,WAAW,KAAOqC,EAAOrC,WAAW,KACzE0B,EAAiBW,EACjB+B,EAAcC,MAAM,CAAC,EAAG,GACxBtB,EAAWqB,EAAcE,IAAI,CAAC,MAAQ,IAC/B,KAIR,CACHvB,SAAAA,EACArB,eAAAA,CACJ,CACJ,CClBW,SAAS6C,EAAiB7B,CAAI,CAAES,CAAM,CAAE,CAC/C,GAAII,EAAcb,EAAMS,GAAS,CAC7B,IAAMqB,EAAgB9B,EAAK1J,KAAK,CAACmK,EAAOjK,MAAM,EAC9C,OAAOsL,EAAcpB,UAAU,CAAC,KAAOoB,EAAgB,CAAC,CAAC,EAAEA,EAAc,CAAC,CAC7E,OACM9B,CACX,CCVO,SAAS+B,EAAoB1B,CAAQ,CAAE2B,CAAO,CAAE,CACnD,IAAIC,EACJ,GAAM,CAAEb,SAAAA,CAAAA,CAAWc,KAAAA,CAAAA,CAAOf,cAAAA,CAAAA,CAAgB,CAAG,IAA0C,EAAzCc,CAAAA,EAAcD,EAAQG,UAAU,EAAYF,EAAc,CAAC,CAAC,CACpGhB,EAAO,CACTZ,SAAUA,EACVc,cAAed,MAAAA,EAAmBA,EAASgB,QAAQ,CAAC,KAAOF,CAAa,EAM5E,GAJIC,GAAYP,EAAcI,EAAKZ,QAAQ,CAAEe,KACzCH,EAAKZ,QAAQ,CAAGwB,EAAiBZ,EAAKZ,QAAQ,CAAEe,GAChDH,EAAKG,QAAQ,CAAGA,GAEhBY,CAAsB,IAAtBA,EAAQI,SAAS,EAAanB,EAAKZ,QAAQ,CAACK,UAAU,CAAC,iBAAmBO,EAAKZ,QAAQ,CAACgB,QAAQ,CAAC,SAAU,CAC3G,IAAMgB,EAAQpB,EAAKZ,QAAQ,CAACP,OAAO,CAAC,mBAAoB,IAAIA,OAAO,CAAC,UAAW,IAAIP,KAAK,CAAC,KACnF2B,EAAUmB,CAAK,CAAC,EAAE,CACxBpB,EAAKZ,QAAQ,CAAGgC,UAAAA,CAAK,CAAC,EAAE,CAAe,CAAC,CAAC,EAAEA,EAAM/L,KAAK,CAAC,GAAGsL,IAAI,CAAC,KAAK,CAAC,CAAG,GAAG,CAC3EX,EAAKC,OAAO,CAAGA,CACnB,CAAC,GACGgB,EAAM,CACN,IAAMI,EAAab,EAAoBR,EAAKZ,QAAQ,CAAE6B,EAAKzC,OAAO,CAClEwB,CAAAA,EAAKtB,MAAM,CAAG2C,IAAkB,EAAlBA,EAAqB,KAAK,EAAIA,EAAWtD,cAAc,CACrEiC,EAAKZ,QAAQ,CAAG,CAACiC,IAAkB,EAAlBA,EAAqB,KAAK,EAAIA,EAAWjC,QAAQ,GAAKY,EAAKZ,QAAQ,CACvF,OACMY,CACX,CCtBA,IAAAsB,EAAA,uFACA,SAAAC,EAAAhF,CAAA,CAAAiF,CAAA,EACA,WAAA/E,IAAAD,OAAAD,GAAAsC,OAAA,CAAAyC,EAAA,aAAAE,GAAAhF,OAAAgF,GAAA3C,OAAA,CAAAyC,EAAA,aACA,CACA,IAAAG,EAAA7E,OAAA,kBACO,OAAA8E,EACPlH,YAAAmH,CAAA,CAAAC,CAAA,CAAAxN,CAAA,EACA,IAAAoN,EACAT,CACA,kBAAAa,GAAA,aAAAA,GAAA,iBAAAA,GACAJ,EAAAI,EACAb,EAAA3M,GAAA,IAEA2M,EAAA3M,GAAAwN,GAAA,GAEA,KAAAH,EAAA,EACAlF,IAAAgF,EAAAI,EAAAH,GAAAT,EAAAS,IAAA,EACAT,QAAAA,EACAZ,SAAA,EACA,EACA,KAAA0B,UAAA,EACA,CACAA,YAAA,CACA,IAAA3D,EAAAC,EAAA2D,EAAAC,EAAAC,EACA,IAAAC,EAA6BnB,EAAmB,KAAAW,EAAA,CAAAlF,GAAA,CAAA6C,QAAA,EAChD8B,WAAA,KAAAO,EAAA,CAAAV,OAAA,CAAAG,UAAA,CACAC,UAAA,EACA,EACA,MAAAM,EAAA,CAAAS,YAAA,CAAsCtE,EAAkB,MAAAM,CAAAA,EAAA,KAAAuD,EAAA,CAAAV,OAAA,CAAAG,UAAA,eAAA/C,CAAAA,EAAAD,EAAA+C,IAAA,SAAA9C,EAAAgE,OAAA,CAAiH9B,EAAW,KAAAoB,EAAA,CAAAlF,GAAA,MAAAkF,EAAA,CAAAV,OAAA,CAAApJ,OAAA,GACpL,IAAA4G,EAAA,OAAAuD,CAAAA,EAAA,KAAAL,EAAA,CAAAS,YAAA,SAAAJ,EAAAvD,aAAA,UAAAwD,CAAAA,EAAA,KAAAN,EAAA,CAAAV,OAAA,CAAAG,UAAA,eAAAc,CAAAA,EAAAD,EAAAd,IAAA,SAAAe,EAAAzD,aAAA,CACA,MAAAkD,EAAA,CAAAlF,GAAA,CAAA6C,QAAA,CAAA6C,EAAA7C,QAAA,CACA,KAAAqC,EAAA,CAAAlD,aAAA,CAAAA,EACA,KAAAkD,EAAA,CAAAtB,QAAA,CAAA8B,EAAA9B,QAAA,KACA,KAAAsB,EAAA,CAAAxB,OAAA,CAAAgC,EAAAhC,OAAA,CACA,KAAAwB,EAAA,CAAA/C,MAAA,CAAAuD,EAAAvD,MAAA,EAAAH,EACA,KAAAkD,EAAA,CAAAvB,aAAA,CAAA+B,EAAA/B,aAAA,CAEAkC,gBAAA,CACA,OAAerC,EAAsB,CACrCI,SAAA,KAAAsB,EAAA,CAAAtB,QAAA,CACAF,QAAA,KAAAwB,EAAA,CAAAxB,OAAA,CACA1B,cAAA,KAAAkD,EAAA,CAAAV,OAAA,CAAAsB,WAAA,CAAAhH,KAAAA,EAAA,KAAAoG,EAAA,CAAAlD,aAAA,CACAG,OAAA,KAAA+C,EAAA,CAAA/C,MAAA,CACAU,SAAA,KAAAqC,EAAA,CAAAlF,GAAA,CAAA6C,QAAA,CACAc,cAAA,KAAAuB,EAAA,CAAAvB,aAAA,EAEA,CACAoC,cAAA,CACA,YAAAb,EAAA,CAAAlF,GAAA,CAAAgG,MAAA,CAEA,IAAAtC,SAAA,CACA,YAAAwB,EAAA,CAAAxB,OAAA,CAEA,IAAAA,QAAAA,CAAA,EACA,KAAAwB,EAAA,CAAAxB,OAAA,CAAAA,CACA,CACA,IAAAvB,QAAA,CACA,YAAA+C,EAAA,CAAA/C,MAAA,IACA,CACA,IAAAA,OAAAA,CAAA,EACA,IAAAR,EAAAsE,EACA,SAAAf,EAAA,CAAA/C,MAAA,UAAAR,CAAAA,EAAA,KAAAuD,EAAA,CAAAV,OAAA,CAAAG,UAAA,eAAAsB,CAAAA,EAAAtE,EAAA+C,IAAA,SAAAuB,EAAAhE,OAAA,CAAA9H,QAAA,CAAAgI,EAAA,EACA,iEAAiFA,EAAO,IAExF,KAAA+C,EAAA,CAAA/C,MAAA,CAAAA,CACA,CACA,IAAAH,eAAA,CACA,YAAAkD,EAAA,CAAAlD,aAAA,CAEA,IAAA2D,cAAA,CACA,YAAAT,EAAA,CAAAS,YAAA,CAEA,IAAAO,cAAA,CACA,YAAAhB,EAAA,CAAAlF,GAAA,CAAAkG,YAAA,CAEA,IAAAlC,MAAA,CACA,YAAAkB,EAAA,CAAAlF,GAAA,CAAAgE,IAAA,CAEA,IAAAA,KAAAhK,CAAA,EACA,KAAAkL,EAAA,CAAAlF,GAAA,CAAAgE,IAAA,CAAAhK,CACA,CACA,IAAAuH,UAAA,CACA,YAAA2D,EAAA,CAAAlF,GAAA,CAAAuB,QAAA,CAEA,IAAAA,SAAAvH,CAAA,EACA,KAAAkL,EAAA,CAAAlF,GAAA,CAAAuB,QAAA,CAAAvH,CACA,CACA,IAAAmM,MAAA,CACA,YAAAjB,EAAA,CAAAlF,GAAA,CAAAmG,IAAA,CAEA,IAAAA,KAAAnM,CAAA,EACA,KAAAkL,EAAA,CAAAlF,GAAA,CAAAmG,IAAA,CAAAnM,CACA,CACA,IAAAoM,UAAA,CACA,YAAAlB,EAAA,CAAAlF,GAAA,CAAAoG,QAAA,CAEA,IAAAA,SAAApM,CAAA,EACA,KAAAkL,EAAA,CAAAlF,GAAA,CAAAoG,QAAA,CAAApM,CACA,CACA,IAAAqM,MAAA,CACA,IAAAxD,EAAA,KAAAgD,cAAA,GACAG,EAAA,KAAAD,YAAA,GACA,SAAkB,KAAAK,QAAA,CAAc,IAAI,KAAApC,IAAA,CAAU,EAAEnB,EAAS,EAAEmD,EAAO,EAAE,KAAAjD,IAAA,CAAU,EAE9E,IAAAsD,KAAArG,CAAA,EACA,KAAAkF,EAAA,CAAAlF,GAAA,CAAAgF,EAAAhF,GACA,KAAAsF,UAAA,EACA,CACA,IAAAgB,QAAA,CACA,YAAApB,EAAA,CAAAlF,GAAA,CAAAsG,MAAA,CAEA,IAAAzD,UAAA,CACA,YAAAqC,EAAA,CAAAlF,GAAA,CAAA6C,QAAA,CAEA,IAAAA,SAAA7I,CAAA,EACA,KAAAkL,EAAA,CAAAlF,GAAA,CAAA6C,QAAA,CAAA7I,CACA,CACA,IAAA+I,MAAA,CACA,YAAAmC,EAAA,CAAAlF,GAAA,CAAA+C,IAAA,CAEA,IAAAA,KAAA/I,CAAA,EACA,KAAAkL,EAAA,CAAAlF,GAAA,CAAA+C,IAAA,CAAA/I,CACA,CACA,IAAAgM,QAAA,CACA,YAAAd,EAAA,CAAAlF,GAAA,CAAAgG,MAAA,CAEA,IAAAA,OAAAhM,CAAA,EACA,KAAAkL,EAAA,CAAAlF,GAAA,CAAAgG,MAAA,CAAAhM,CACA,CACA,IAAAuM,UAAA,CACA,YAAArB,EAAA,CAAAlF,GAAA,CAAAuG,QAAA,CAEA,IAAAA,SAAAvM,CAAA,EACA,KAAAkL,EAAA,CAAAlF,GAAA,CAAAuG,QAAA,CAAAvM,CACA,CACA,IAAAwM,UAAA,CACA,YAAAtB,EAAA,CAAAlF,GAAA,CAAAwG,QAAA,CAEA,IAAAA,SAAAxM,CAAA,EACA,KAAAkL,EAAA,CAAAlF,GAAA,CAAAwG,QAAA,CAAAxM,CACA,CACA,IAAA4J,UAAA,CACA,YAAAsB,EAAA,CAAAtB,QAAA,CAEA,IAAAA,SAAA5J,CAAA,EACA,KAAAkL,EAAA,CAAAtB,QAAA,CAAA5J,EAAAkJ,UAAA,MAAAlJ,EAAA,IAAsEA,EAAM,EAE5EC,UAAA,CACA,YAAAoM,IAAA,CAEAI,QAAA,CACA,YAAAJ,IAAA,CAEA,CAAAhG,OAAAqG,GAAA,mCACA,OACAL,KAAA,KAAAA,IAAA,CACAC,OAAA,KAAAA,MAAA,CACAF,SAAA,KAAAA,QAAA,CACAI,SAAA,KAAAA,QAAA,CACAD,SAAA,KAAAA,QAAA,CACAvC,KAAA,KAAAA,IAAA,CACAzC,SAAA,KAAAA,QAAA,CACA4E,KAAA,KAAAA,IAAA,CACAtD,SAAA,KAAAA,QAAA,CACAmD,OAAA,KAAAA,MAAA,CACAE,aAAA,KAAAA,YAAA,CACAnD,KAAA,KAAAA,IAAA,CAEA,CACA4D,OAAA,CACA,WAAAxB,EAAAlF,OAAA,WAAAiF,EAAA,CAAAV,OAAA,CACA,CACA,CChLA,IAAAoC,EAAA,CACA,SACA,MACA,OACA,CACA,SAAAC,EAAAC,CAAA,EAEA,OADAA,EAAAA,EAAAhH,WAAA,GACA8G,EAAAzM,QAAA,CAAA2M,GAAAA,EAAAhI,KAAAA,CAAA,CAEA,SAAAiI,EAAAC,CAAA,EACA,IAAAC,EAAA,GACA,QAAA1I,KAAAyI,EACAA,CAAA,CAAAzI,EAAA,EACA0I,CAAAA,CAAA,CAAA1I,EAAA,CAAAyI,CAAA,CAAAzI,EAAA,EAGA,OAAA0I,CACA,CACO,SAAAC,EAAAC,CAAA,EACP,IAAAC,EAAA,CACA,SAAAD,GAAAA,EAAA3E,IAAA,UAAyC2E,EAAA3E,IAAA,CAAO,EAChD,YAAA2E,GAAAA,EAAAE,OAAA,aAAkDF,EAAAE,OAAA,CAAAC,WAAA,GAAwB,EAC1E,WAAAH,GAAAA,EAAAI,MAAA,aAAgDJ,EAAAI,MAAA,CAAS,EACzD,WAAAJ,GAAAA,EAAArF,MAAA,YAA+CqF,EAAArF,MAAA,CAAS,EACxD,WAAAqF,GAAAA,EAAAK,MAAA,WACA,aAAAL,GAAAA,EAAAM,QAAA,aACA,aAAAN,GAAAA,EAAAO,QAAA,cAAqDP,EAAAO,QAAA,CAAW,EAChE,CAAAC,MAAA,CAAAC,SACA,SAAcT,EAAAU,IAAA,CAAO,GAAGC,mBAAAX,EAAAnN,KAAA,QAAoC,EAAEoN,EAAAhD,IAAA,OAAiB,EAIpE,SAAA2D,EAAAC,CAAA,EACX,IAAAC,EAAA,IAAAC,IACA,QAAAC,KAAAH,EAAAjG,KAAA,QAAuC,CACvC,IAAAoG,EAAA,SACA,IAAAC,EAAAD,EAAAzF,OAAA,MACAnE,EAAA4J,EAAArP,KAAA,GAAAsP,GACApO,EAAAmO,EAAArP,KAAA,CAAAsP,EAAA,GACAH,EAAAI,GAAA,CAAA9J,EAAA+J,mBAAAtO,GAAA,QACA,CACA,OAAAiO,CACA,CAGW,SAAAM,EAAAC,CAAA,EACX,IAAAA,EACA,MACA,CACA,KAAAX,EAAA7N,EAAA,IAAAyO,EAAA,CAAAV,EAAAS,GACA,CAAY1G,OAAAA,CAAA,CAAAuF,QAAAA,CAAA,CAAAqB,SAAAA,CAAA,CAAAC,OAAAA,CAAA,CAAAnG,KAAAA,CAAA,CAAAoG,SAAAA,CAAA,CAAApB,OAAAA,CAAA,EAAmEhJ,OAAAqK,WAAA,CAAAJ,EAAAR,GAAA,GAAA1J,EAAAM,EAAA,IAC/EN,EAAAuB,WAAA,GACAjB,EACA,GACAmJ,EAAA,CACAH,KAAAA,EACA7N,MAAAsO,mBAAAtO,GACA8H,OAAAA,EACA,GAAAuF,GAAA,CACAA,QAAA,IAAAyB,KAAAzB,EACA,CAAS,CACT,GAAAqB,GAAA,CACAjB,SAAA,EACA,CAAS,CACT,oBAAAkB,GAAA,CACApB,OAAAjN,OAAAqO,EACA,CAAS,CACTnG,KAAAA,EACA,GAAAoG,GAAA,CACAlB,SAAAb,EAAA+B,EACA,CAAS,CACT,GAAApB,GAAA,CACAA,OAAA,EACA,GAEA,OAAAT,EAAAiB,EACA,CCzEW,MAAAe,EACXC,QAAA,IAAAd,GAAA,aACAe,CAAA,EACA,KAAAC,QAAA,CAAAD,EACA,IAAAE,EAAAF,EAAAG,GAAA,WACA,GAAAD,EAAA,CACA,IAAApF,EAA2BgE,EAAiBoB,GAC5C,QAAAtB,EAAA7N,EAAA,GAAA+J,EACA,KAAAiF,OAAA,CAAAX,GAAA,CAAAR,EAAA,CACAA,KAAAA,EACA7N,MAAAA,CACA,EAEA,EAEA,CAAAqG,OAAAgJ,QAAA,IACA,YAAAL,OAAA,CAAA3I,OAAAgJ,QAAA,GACA,CAGA,IAAAC,MAAA,CACA,YAAAN,OAAA,CAAAM,IAAA,CAEAF,IAAA,GAAAG,CAAA,EACA,IAAA1B,EAAA,iBAAA0B,CAAA,IAAAA,CAAA,IAAAA,CAAA,IAAA1B,IAAA,CACA,YAAAmB,OAAA,CAAAI,GAAA,CAAAvB,EACA,CACA2B,OAAA,GAAAD,CAAA,EACA,IAAA5H,EACA,IAAA8H,EAAA9K,MAAA+K,IAAA,MAAAV,OAAA,EACA,IAAAO,EAAAvQ,MAAA,CACA,OAAAyQ,EAAAxB,GAAA,GAAA0B,EAAA3P,EAAA,GAAAA,EACA,CACA,IAAA6N,EAAA,iBAAA0B,CAAA,IAAAA,CAAA,UAAA5H,CAAAA,EAAA4H,CAAA,YAAA5H,EAAAkG,IAAA,CACA,OAAA4B,EAAA9B,MAAA,GAAAiC,EAAA,GAAAA,IAAA/B,GAAAI,GAAA,GAAA0B,EAAA3P,EAAA,GAAAA,EACA,CACA6P,IAAAhC,CAAA,EACA,YAAAmB,OAAA,CAAAa,GAAA,CAAAhC,EACA,CACAQ,IAAA,GAAAkB,CAAA,EACA,IAAA1B,EAAA7N,EAAA,CAAAuP,IAAAA,EAAAvQ,MAAA,EACAuQ,CAAA,IAAA1B,IAAA,CACA0B,CAAA,IAAAvP,KAAA,CACA,CAAAuP,CAAA,CACAtB,EAAA,KAAAe,OAAA,CAMA,OALAf,EAAAI,GAAA,CAAAR,EAAA,CACAA,KAAAA,EACA7N,MAAAA,CACA,GACA,KAAAkP,QAAA,CAAAb,GAAA,UAAA1J,MAAA+K,IAAA,CAAAzB,GAAAA,GAAA,GAAA0B,EAAA9K,EAAA,GAAkEqI,EAASrI,IAAAuF,IAAA,QAC3E,KAIA0F,OAAAC,CAAA,EACA,IAAA9B,EAAA,KAAAe,OAAA,CACAnJ,EAAA,MAAAjB,OAAA,CAAAmL,GAAAA,EAAA9B,GAAA,IAAAA,EAAA6B,MAAA,CAAAjC,IAAAI,EAAA6B,MAAA,CAAAC,EAAA,CAEA,OADA,KAAAb,QAAA,CAAAb,GAAA,UAAA1J,MAAA+K,IAAA,CAAAzB,GAAAA,GAAA,GAAA0B,EAAA3P,EAAA,GAAsEkN,EAASlN,IAAAoK,IAAA,QAC/EvE,CACA,CAGAmK,OAAA,CAEA,OADA,KAAAF,MAAA,CAAAnL,MAAA+K,IAAA,MAAAV,OAAA,CAAAiB,IAAA,KACA,KAIA,CAAA5J,OAAAqG,GAAA,mCACA,wBAAiC/K,KAAAC,SAAA,CAAA4C,OAAAqK,WAAA,MAAAG,OAAA,GAAiD,EAElF,CCzEA,SAAA1G,EAAA4H,CAAA,CAAA9O,CAAA,EAEA,SAAApB,EAAA,GADAoB,EAAA0O,MAAA,eACAI,GAAA,CACA,IAAAC,EAA2BjD,EAASlN,GACpCoB,EAAA2D,MAAA,cAAAoL,EACA,CACA,CACA,SAAAC,EAAApC,EAAA,CACAH,KAAA,GACA7N,MAAA,EACA,CAAC,EAOD,OANAgO,EAAAT,MAAA,EACAS,CAAAA,EAAAX,OAAA,KAAAyB,KAAAA,KAAAuB,GAAA,GAAArC,IAAAA,EAAAT,MAAA,GAEAS,CAAAA,IAAA,GAAAA,EAAAxF,IAAA,EAAAwF,KAAAlJ,IAAAkJ,EAAAxF,IAAA,GACAwF,CAAAA,EAAAxF,IAAA,MAEAwF,CACA,CAKW,MAAAsC,EACXtB,QAAA,IAAAd,GAAA,aACAqC,CAAA,EACA,KAAArB,QAAA,CAAAqB,EAEA,IAAAnP,EAAA,KAAA8N,QAAA,CAAAM,MAAA,eACA,QAAAL,KAAA/N,EAAA,CACA,IAAA2I,EAA2BwE,EAAoBY,GAC/CpF,GACA,KAAAiF,OAAA,CAAAX,GAAA,CAAAtE,EAAA8D,IAAA,CAAA9D,EAEA,CACA,CAGAqF,IAAA,GAAAG,CAAA,EACA,IAAAhL,EAAA,iBAAAgL,CAAA,IAAAA,CAAA,IAAAA,CAAA,IAAA1B,IAAA,CACA,YAAAmB,OAAA,CAAAI,GAAA,CAAA7K,EACA,CAGAiL,OAAA,GAAAD,CAAA,EACA,IAAA5H,EACA,IAAA8H,EAAA9K,MAAA+K,IAAA,MAAAV,OAAA,CAAAtK,MAAA,IACA,IAAA6K,EAAAvQ,MAAA,CACA,OAAAyQ,CACA,CACA,IAAAlL,EAAA,iBAAAgL,CAAA,IAAAA,CAAA,UAAA5H,CAAAA,EAAA4H,CAAA,YAAA5H,EAAAkG,IAAA,CACA,OAAA4B,EAAA9B,MAAA,IAAAR,EAAAU,IAAA,GAAAtJ,EACA,CAGA8J,IAAA,GAAAkB,CAAA,EACA,IAAA1B,EAAA7N,EAAAgO,EAAA,CAAAuB,IAAAA,EAAAvQ,MAAA,EACAuQ,CAAA,IAAA1B,IAAA,CACA0B,CAAA,IAAAvP,KAAA,CACAuP,CAAA,IACA,CAAAA,CAAA,CACAtB,EAAA,KAAAe,OAAA,CAOA,OANAf,EAAAI,GAAA,CAAAR,EAAAuC,EAAA,CACAvC,KAAAA,EACA7N,MAAAA,EACA,GAAAgO,CAAA,IAEA1F,EAAA2F,EAAA,KAAAiB,QAAA,EACA,KAIAY,OAAA,GAAAP,CAAA,EACA,IAAA1B,EAAA,iBAAA0B,CAAA,IAAAA,CAAA,IAAAA,CAAA,IAAA1B,IAAA,CACA,YAAAQ,GAAA,EACAR,KAAAA,EACA7N,MAAA,GACAqN,QAAA,IAAAyB,KAAA,EACA,EACA,CACA,CAAAzI,OAAAqG,GAAA,mCACA,yBAAkC/K,KAAAC,SAAA,CAAA4C,OAAAqK,WAAA,MAAAG,OAAA,GAAiD,EAEnF,CEhFO,IAAAwB,EAAAnK,OAAA,mBACA,OAAAoK,UAAAC,QACPzM,YAAAmH,CAAA,CAAAuF,EAAA,EAAgC,EAChC,IAAA3K,EAAA,iBAAAoF,GAAA,QAAAA,EAAAA,EAAApF,GAAA,CAAAC,OAAAmF,EAAA,CACQrF,EAAWC,GACnB,MAAAA,EAAA2K,GACA,KAAAH,EAAA,EACAI,QAAA,IAAyB7B,EAAc,KAAA3N,OAAA,EACvCyP,IAAAF,EAAAE,GAAA,KACAC,GAAAH,EAAAG,EAAA,CACA9K,IAAA,IAAqBmF,EAAOnF,EAAA,CAC5B5E,QAAyBwE,EAAa,KAAAxE,OAAA,EACtCuJ,WAAAgG,EAAAhG,UAAA,EAEA,CACA,CACA,CAAAtE,OAAAqG,GAAA,mCACA,OACAkE,QAAA,KAAAA,OAAA,CACAC,IAAA,KAAAA,GAAA,CACAC,GAAA,KAAAA,EAAA,CACAC,QAAA,KAAAA,OAAA,CACA/K,IAAA,KAAAA,GAAA,CAEAgL,SAAA,KAAAA,QAAA,CACAC,MAAA,KAAAA,KAAA,CACAC,YAAA,KAAAA,WAAA,CACAC,YAAA,KAAAA,WAAA,CACA/P,QAAAoD,OAAAqK,WAAA,MAAAzN,OAAA,EACAgQ,UAAA,KAAAA,SAAA,CACAC,UAAA,KAAAA,SAAA,CACA5P,OAAA,KAAAA,MAAA,CACA6P,KAAA,KAAAA,IAAA,CACAC,SAAA,KAAAA,QAAA,CACAC,SAAA,KAAAA,QAAA,CACAC,eAAA,KAAAA,cAAA,CACAC,OAAA,KAAAA,MAAA,CAEA,CACA,IAAAd,SAAA,CACA,YAAAJ,EAAA,CAAAI,OAAA,CAEA,IAAAC,KAAA,CACA,YAAAL,EAAA,CAAAK,GAAA,CAEA,IAAAC,IAAA,CACA,YAAAN,EAAA,CAAAM,EAAA,CAEA,IAAAC,SAAA,CACA,YAAAP,EAAA,CAAAxK,GAAA,CAMA,IAAAjI,MAAA,CACA,UAAkBmG,CAAgB,CAMlC,IAAAyN,IAAA,CACA,UAAkBxN,CAAc,CAEhC,IAAA6B,KAAA,CACA,YAAAwK,EAAA,CAAAxK,GAAA,CAAA/F,QAAA,EACA,CACA,CCrEA,IAAM2R,EAASvL,OAAA,qBACfwL,EAAA,IAAAC,IAAA,CACA,IACA,IACA,IACA,IACA,IACA,EACA,SAAAC,EAAApB,CAAA,CAAAvP,CAAA,EACA,IAAAuG,EACA,GAAAgJ,IAAA,EAAAA,EAAA,aAAAhJ,CAAAA,EAAAgJ,EAAAxJ,OAAA,SAAAQ,EAAAvG,OAAA,EACA,IAAAuP,CAAAA,EAAAxJ,OAAA,CAAA/F,OAAA,YAAAkD,OAAA,EACA,8DAEA,IAAA2L,EAAA,GACA,QAAA1L,EAAAvE,EAAA,GAAA2Q,EAAAxJ,OAAA,CAAA/F,OAAA,CACAA,EAAAiN,GAAA,yBAAA9J,EAAAvE,GACAiQ,EAAAtM,IAAA,CAAAY,GAEAnD,EAAAiN,GAAA,iCAAA4B,EAAA7F,IAAA,MACA,EAEO,MAAA4H,UAAApO,SACPK,YAAAvC,CAAA,CAAAiP,EAAA,EAA+B,EAC/B,MAAAjP,EAAAiP,GACA,KAAaiB,EAAS,EACtBhB,QAAA,IAAyBN,EAAe,KAAAlP,OAAA,EACxC4E,IAAA2K,EAAA3K,GAAA,KAAgCmF,EAAOwF,EAAA3K,GAAA,EACvC5E,QAAyBwE,EAAa,KAAAxE,OAAA,EACtCuJ,WAAAgG,EAAAhG,UAAA,GACa7F,KAAAA,CAAA,CAEb,CACA,CAAAuB,OAAAqG,GAAA,mCACA,OACAkE,QAAA,KAAAA,OAAA,CACA5K,IAAA,KAAAA,GAAA,CAEAtE,KAAA,KAAAA,IAAA,CACAsP,SAAA,KAAAA,QAAA,CACA5P,QAAAoD,OAAAqK,WAAA,MAAAzN,OAAA,EACA6Q,GAAA,KAAAA,EAAA,CACAC,WAAA,KAAAA,UAAA,CACA/P,OAAA,KAAAA,MAAA,CACAgQ,WAAA,KAAAA,UAAA,CACA1S,KAAA,KAAAA,IAAA,CAEA,CACA,IAAAmR,SAAA,CACA,YAAoBgB,EAAS,CAAAhB,OAAA,CAE7B,OAAApO,KAAAd,CAAA,CAAAiP,CAAA,EAEA,IAAAhK,EAAA/C,SAAApB,IAAA,CAAAd,EAAAiP,GACA,WAAAqB,EAAArL,EAAAjF,IAAA,CAAAiF,EACA,CACA,OAAA4K,SAAAvL,CAAA,CAAA2K,CAAA,EACA,IAAAxO,EAAA,iBAAAwO,EAAAA,EAAA,CAAAA,IAAA,EAAAA,EAAA,OAAAA,EAAAxO,MAAA,OACA,IAAA0P,EAAAhC,GAAA,CAAA1N,GACA,oFAEA,IAAAiQ,EAAA,iBAAAzB,EAAAA,EAAA,GACAvP,EAAA,IAAAkD,QAAA8N,IAAA,EAAAA,EAAA,OAAAA,EAAAhR,OAAA,EAEA,OADAA,EAAAiN,GAAA,YAAgCtI,EAAWC,IAC3C,IAAAgM,EAAA,MACA,GAAAI,CAAA,CACAhR,QAAAA,EACAe,OAAAA,CACA,EACA,CACA,OAAAkQ,QAAAlB,CAAA,CAAAR,CAAA,EACA,IAAAvP,EAAA,IAAAkD,QAAAqM,IAAA,EAAAA,EAAA,OAAAA,EAAAvP,OAAA,EAGA,OAFAA,EAAAiN,GAAA,wBAA4CtI,EAAWoL,IACvDY,EAAApB,EAAAvP,GACA,IAAA4Q,EAAA,MACA,GAAArB,CAAA,CACAvP,QAAAA,CACA,EACA,CACA,OAAAkR,KAAA3B,CAAA,EACA,IAAAvP,EAAA,IAAAkD,QAAAqM,IAAA,EAAAA,EAAA,OAAAA,EAAAvP,OAAA,EAGA,OAFAA,EAAAiN,GAAA,0BACA0D,EAAApB,EAAAvP,GACA,IAAA4Q,EAAA,MACA,GAAArB,CAAA,CACAvP,QAAAA,CACA,EACA,CACA,CCvFW,SAASmR,EAAcvM,CAAG,CAAEiF,CAAI,CAAE,CACzC,IAAMuH,EAAU,iBAAOvH,EAAoB,IAAI/E,IAAI+E,GAAQA,CAAI,CACzDwH,EAAW,IAAIvM,IAAIF,EAAKiF,GACxBqB,EAAS,CAAC,EAAEkG,EAAQpG,QAAQ,CAAC,EAAE,EAAEoG,EAAQxI,IAAI,CAAC,CAAC,CACrD,MAAO,CAAC,EAAEyI,EAASrG,QAAQ,CAAC,EAAE,EAAEqG,EAASzI,IAAI,CAAC,CAAC,GAAKsC,EAASmG,EAASxS,QAAQ,GAAGqI,OAAO,CAACgE,EAAQ,IAAMmG,EAASxS,QAAQ,EAAE,CCR9H,IAAAyS,EAAA,CACA,iBACA,eACA,sBACA,mBACA,CACAC,EAAA,CACA,gBACA,CAMO,SAAAC,EAAA1G,CAAA,CAAA2G,CAAA,EACP,QAAAhF,KAAA6E,EACAxG,EAAA4D,MAAA,CAAAjC,GAEA,GAAAgF,EACA,QAAAhF,KAAA8E,EACAzG,EAAA4D,MAAA,CAAAjC,EAEA,CACA,OAAA3B,CACA,CCLO,SAAS4G,EAAiBjK,CAAQ,CAAEkK,CAAO,CAAE,CAChD,OAAOA,EAAUlK,EAASP,OAAO,CAAC,cAAe,IAAMO,CAAQ,CETnE,MAAAmK,UAA8BvC,EAC9BxM,YAAAiD,CAAA,EACA,MAAAA,EAAAkE,KAAA,CAAAlE,EAAAyJ,IAAA,EACA,KAAAvJ,UAAA,CAAAF,EAAAnJ,IAAA,CAEA,IAAAoJ,SAAA,CACA,UAAkBpD,EAAkB,CACpChG,KAAA,KAAAqJ,UAAA,EACS,CAETV,aAAA,CACA,UAAkB3C,EAAkB,CACpChG,KAAA,KAAAqJ,UAAA,EACS,CAETL,WAAA,CACA,UAAkBhD,EAAkB,CACpChG,KAAA,KAAAqJ,UAAA,EACS,CAET,CACA,IAAM6L,EAAiB,CACvB,CDjCmB,MCmCnB,CACA,CDnCsC,yBCqCtC,CACA,CDrCoC,uBCuCpC,CACA,CDvCkC,sBCyClC,CACA,CACO,eAAAC,GAAAhM,CAAA,EAEP,IAAAiM,EAAA,SAAAC,KAAAC,gBAAA,CACAnM,EAAAC,OAAA,CAAAnB,GAAA,CAAyB8M,EAAgB5L,EAAAC,OAAA,CAAAnB,GAAA,KACzC,IAAAsN,EAAA,IAA2BnI,EAAOjE,EAAAC,OAAA,CAAAnB,GAAA,EAClC5E,QAAA8F,EAAAC,OAAA,CAAA/F,OAAA,CACAuJ,WAAAzD,EAAAC,OAAA,CAAAwD,UAAA,GAGAjB,EAAA4J,EAAA5J,OAAA,CACA4J,EAAA5J,OAAA,IACA,IAAA6J,EAAArM,EAAAC,OAAA,CAAA/F,OAAA,kBACAmS,GAAAD,WAAAA,EAAAzK,QAAA,EACAyK,CAAAA,EAAAzK,QAAA,MAEA,IAAAoG,EAA2B7K,EAAe8C,EAAAC,OAAA,CAAA/F,OAAA,EAE1C,IAAA+R,EACA,QAAAK,KAA4BP,EAC5BhE,EAAAa,MAAA,CAAA0D,EAAAvT,QAAA,GAAA6F,WAAA,GAEA,CAEI8M,EAAyBU,EAAApH,YAAA,KAC7B,IAAA/E,EAAA,IAAA6L,EAAA,CACAjV,KAAAmJ,EAAAnJ,IAAA,CACAqN,MAAAnF,OAAAqN,GACA3C,KAAA,CACAjP,KAAAwF,EAAAC,OAAA,CAAAzF,IAAA,CACAmP,IAAA3J,EAAAC,OAAA,CAAA0J,GAAA,CACAzP,QAAA6N,EACA6B,GAAA5J,EAAAC,OAAA,CAAA2J,EAAA,CACArP,OAAAyF,EAAAC,OAAA,CAAA1F,MAAA,CACAkJ,WAAAzD,EAAAC,OAAA,CAAAwD,UAAA,CAEA,GAKA4I,GACA/O,OAAAiP,cAAA,CAAAtM,EAAA,YACAuM,WAAA,GACA1T,MAAA,EACA,GAEA,IAAAL,EAAA,IAAsBsH,EAAc,CACpCE,QAAAA,EACApJ,KAAAmJ,EAAAnJ,IAAA,GAEA4I,EAAA,MAAAO,EAAAzJ,OAAA,CAAA0J,EAAAxH,GAEA,GAAAgH,GAAA,CAAAA,CAAAA,aAAA/C,QAAA,EACA,mEAOA,IAAAyO,EAAA1L,IAAA,EAAAA,EAAA,OAAAA,EAAAvF,OAAA,CAAAgO,GAAA,yBACA,GAAAzI,GAAA0L,EAAA,CACA,IAAAsB,EAAA,IAA+BxI,EAAOkH,EAAA,CACtCvG,YAAA,GACA1K,QAAA8F,EAAAC,OAAA,CAAA/F,OAAA,CACAuJ,WAAAzD,EAAAC,OAAA,CAAAwD,UAAA,EAGAgJ,CAAAA,EAAA3J,IAAA,GAAA7C,EAAA4J,OAAA,CAAA/G,IAAA,GACA2J,EAAAjK,OAAA,CAAAA,GAAAiK,EAAAjK,OAAA,CACA/C,EAAAvF,OAAA,CAAAiN,GAAA,wBAAApI,OAAA0N,KAOAJ,GACA5M,EAAAvF,OAAA,CAAAiN,GAAA,oBAAqDkE,EAAatM,OAAA0N,GAAA1N,OAAAqN,IAElE,KAKA/B,EAAA5K,IAAA,EAAAA,EAAA,OAAAA,EAAAvF,OAAA,CAAAgO,GAAA,aACA,GAAAzI,GAAA4K,EAAA,CACA,IAAAqC,EAAA,IAAgCzI,EAAOoG,EAAA,CACvCzF,YAAA,GACA1K,QAAA8F,EAAAC,OAAA,CAAA/F,OAAA,CACAuJ,WAAAzD,EAAAC,OAAA,CAAAwD,UAAA,GAKAhE,EAAA,IAAA/C,SAAA+C,EAAAjF,IAAA,CAAAiF,GAEAiN,EAAA5J,IAAA,GAAA7C,EAAA4J,OAAA,CAAA/G,IAAA,GACA4J,EAAAlK,OAAA,CAAAA,GAAAkK,EAAAlK,OAAA,CACA/C,EAAAvF,OAAA,CAAAiN,GAAA,YAAApI,OAAA2N,KAOAL,IACA5M,EAAAvF,OAAA,CAAA0O,MAAA,aACAnJ,EAAAvF,OAAA,CAAAiN,GAAA,qBAAsDkE,EAAatM,OAAA2N,GAAA3N,OAAAqN,KAEnE,OACA,CACA3M,SAAAA,GAA8BqL,EAAAM,IAAiB,GAC/CvL,UAAAH,QAAA6I,GAAA,CAAA9P,CAAA,CAAqC4G,EAAe,CACpD,CACA,CACA,SAAAsN,GAAAC,CAAA,EAEA,oDAAyDA,EAAO;wEAChE,EAEA,SAAAC,GAAAC,CAAA,EACA,IAAAC,EAAA,IAAAC,MAAA,aAAyC,CACzC9E,IAAA+E,CAAA,CAAAC,CAAA,EACA,GAAAA,SAAAA,EACA,QACA,OACA,MAAAP,GAAAG,GAAA,EAEAK,WAAA,CACA,YAAAR,GAAAG,GAAA,EAEAM,MAAAC,CAAA,CAAAC,CAAA,CAAAjF,CAAA,EACA,sBAAAA,CAAA,IACA,OAAAA,CAAA,IAAA0E,EACA,OACA,MAAAJ,GAAAG,GAAA,CAEA,GACA,WAAAE,MAAA,GAAuB,CACvB9E,IAAA,IAAA6E,CACA,EACA,CACO,SAAAQ,IAAA,CAEPnT,UAAoB9D,EAAAF,CAAM,CAAAgE,OAAA,GAE1BA,QAAAC,GAAA,CAAsB/D,EAAAF,CAAM,CAAAgE,OAAA,CAAAC,GAAA,CACpB/D,EAAAF,CAAM,CAAAgE,OAAA,CAAAA,SAIdkD,OAAAiP,cAAA,CAAAiB,WAAA,wBACA1U,MAAA+T,GACAL,WAAA,GACAiB,aAAA,EACA,EACA","sources":["webpack://_N_E/","webpack://_N_E/./types/index.ts","webpack://_N_E/./node_modules/eventsource-parser/dist/index.esm.js","webpack://_N_E/./utils/index.ts","webpack://_N_E/./pages/api/chat.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/serialize.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/request-cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/response-cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/app-router-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/<anon>"],"sourcesContent":["\n        import { adapter, enhanceGlobals } from 'next/dist/esm/server/web/adapter'\n\n        enhanceGlobals()\n\n        var mod = require(\"private-next-pages/api/chat.ts\")\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/chat\" must export a `default` function');\n        }\n\n        export default function (opts) {\n          return adapter({\n              ...opts,\n              page: \"/api/chat\",\n              handler,\n          })\n        }\n    ","import { RouteLoader } from \"next/dist/client/route-loader\";\n\nexport enum OpenAIModel {\n  DAVINCI_TURBO = \"gpt-3.5-turbo\"\n}\n\n\nexport interface ChatMessage {\n  //role: RouteLoader;\n  role: \"user\" | \"assistant\";\n  content: string | JSX.Element;\n}\n\nexport interface Message {\n  //role: RouteLoader;\n  role: \"user\" | \"assistant\";\n  content: string | JSX.Element;\n}\n\nexport type Role = \"assistant\" | \"user\";\n\n\n//This part deals with the pricing plans and the\n//components avaialble for each plan. Each and\n//everyone of them\n\nexport interface Product {\n  id: string /* primary key */;\n  active?: boolean;\n  name?: string;\n  description?: string;\n  image?: string;\n}\n\nexport interface ProductWithPrice extends Product {\n  prices?: Price[];\n}\n\nexport interface Price {\n  id?: string /* primary key */;\n  product_id?: string /* foreign key to products.id */;\n  active?: boolean;\n  description?: string;\n  unit_amount?: number;\n  currency?: string;\n  interval_count?: number;\n  trial_period_days?: number | null;\n  products?: Product;\n  interval?: number\n}\n\nexport interface UserDetails \n{\n  id: string /* primary key */;\n  first_name: string;\n  last_name: string;\n  full_name?: string;\n  avatar_url?: string;\n}\n\nexport interface Subscription {\n  id: string /* primary key */;\n  user_id: string;\n  price_id?: string /* foreign key to prices.id */;\n  quantity?: number;\n  cancel_at_period_end?: boolean;\n  created: string;\n  current_period_start: string;\n  current_period_end: string;\n  ended_at?: string;\n  cancel_at?: string;\n  canceled_at?: string;\n  trial_start?: string;\n  trial_end?: string;\n  prices?: Price;\n}","function createParser(onParse) {\n  let isFirstChunk;\n  let buffer;\n  let startingPosition;\n  let startingFieldLength;\n  let eventId;\n  let eventName;\n  let data;\n  reset();\n  return {\n    feed,\n    reset\n  };\n  function reset() {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n    eventId = void 0;\n    eventName = void 0;\n    data = \"\";\n  }\n  function feed(chunk) {\n    buffer = buffer ? buffer + chunk : chunk;\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n    isFirstChunk = false;\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n    while (position < length) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character;\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n      position += lineLength + 1;\n    }\n    if (position === length) {\n      buffer = \"\";\n    } else if (position > 0) {\n      buffer = buffer.slice(position);\n    }\n  }\n  function parseEventStreamLine(lineBuffer, index, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || void 0,\n          data: data.slice(0, -1)\n          // remove trailing newline\n        });\n\n        data = \"\";\n        eventId = void 0;\n      }\n      eventName = void 0;\n      return;\n    }\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength));\n    let step = 0;\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n    if (field === \"data\") {\n      data += value ? \"\".concat(value, \"\\n\") : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\0\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({\n          type: \"reconnect-interval\",\n          value: retry\n        });\n      }\n    }\n  }\n}\nconst BOM = [239, 187, 191];\nfunction hasBom(buffer) {\n  return BOM.every((charCode, index) => buffer.charCodeAt(index) === charCode);\n}\nexport { createParser };\n//# sourceMappingURL=index.esm.js.map\n","import { Message, OpenAIModel } from \"@/types\";\nimport { createParser, ParsedEvent, ReconnectInterval } from \"eventsource-parser\";\n\nexport const OpenAIStream = async (messages: Message[]) => {\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder();\n\n  const res = await fetch(\"https://api.openai.com/v1/chat/completions\", {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${process.env.OPENAI_API_KEY}`\n    },\n    method: \"POST\",\n    body: JSON.stringify({\n      model: OpenAIModel.DAVINCI_TURBO,\n      messages: [\n        {\n          role: \"system\",\n          content: `You are a helpful, friendly, assistant.`\n        },\n        ...messages\n      ],\n      max_tokens: 800,\n      temperature: 0.0,\n      stream: true\n    })\n  });\n\n  if (res.status !== 200) {\n    throw new Error(\"OpenAI API returned an error\");\n  }\n\n  const stream = new ReadableStream({\n    async start(controller) {\n      const onParse = (event: ParsedEvent | ReconnectInterval) => {\n        if (event.type === \"event\") {\n          const data = event.data;\n\n          if (data === \"[DONE]\") {\n            controller.close();\n            return;\n          }\n\n          try {\n            const json = JSON.parse(data);\n            const text = json.choices[0].delta.content;\n            const queue = encoder.encode(text);\n            controller.enqueue(queue);\n          } catch (e) {\n            controller.error(e);\n          }\n        }\n      };\n\n      const parser = createParser(onParse);\n\n      for await (const chunk of res.body as any) {\n        parser.feed(decoder.decode(chunk));\n      }\n    }\n  });\n\n  return stream;\n};\n","import { Message } from \"@/types\";\nimport { OpenAIStream } from \"@/utils\";\n\nexport const config = {\n  runtime: \"edge\"\n};\n\nconst handler = async (req: Request): Promise<Response> => {\n  try {\n    const { messages } = (await req.json()) as {\n      messages: Message[];\n    };\n\n    const charLimit = 12000;\n    let charCount = 0;\n    let messagesToSend = [];\n\n    \n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      if (typeof message.content === 'string') {\n      if (charCount + message.content.length > charLimit) {\n        break;\n      }\n    \n      charCount += message.content.length;\n    }\n      messagesToSend.push(message);\n    }\n  \n\n    const stream = await OpenAIStream(messagesToSend);\n\n    return new Response(stream);\n  } catch (error) {\n    console.error(error);\n    return new Response(\"Error\", { status: 500 });\n  }\n};\n\nexport default handler;","export class PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export function fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (v !== undefined) {\n                headers.append(key, v);\n            }\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nexport function toNodeHeaders(headers) {\n    const result = {};\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            result[key] = value;\n            if (key.toLowerCase() === \"set-cookie\") {\n                result[key] = splitCookiesString(value);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { PageSignatureError } from \"../error\";\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nexport const waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","export function detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ export function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ export function parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","import { parsePath } from './parse-path';\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ export function addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","import { parsePath } from './parse-path';\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ export function addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","import { parsePath } from './parse-path';\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ export function pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","import { addPathPrefix } from './add-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ export function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    if (locale && locale !== defaultLocale && (ignorePrefix || !pathHasPrefix(path.toLowerCase(), `/${locale.toLowerCase()}`) && !pathHasPrefix(path.toLowerCase(), '/api'))) {\n        return addPathPrefix(path, `/${locale}`);\n    }\n    return path;\n}\n\n//# sourceMappingURL=add-locale.js.map","import { removeTrailingSlash } from './remove-trailing-slash';\nimport { addPathPrefix } from './add-path-prefix';\nimport { addPathSuffix } from './add-path-suffix';\nimport { addLocale } from './add-locale';\nexport function formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ export function getHostname(parsed, headers) {\n    var ref;\n    return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(':')[0].toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ export function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","import { pathHasPrefix } from './path-has-prefix';\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ export function removePathPrefix(path, prefix) {\n    if (pathHasPrefix(path, prefix)) {\n        const withoutPrefix = path.slice(prefix.length);\n        return withoutPrefix.startsWith('/') ? withoutPrefix : `/${withoutPrefix}`;\n    }\n    return path;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","import { normalizeLocalePath } from '../../i18n/normalize-locale-path';\nimport { removePathPrefix } from './remove-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\nexport function getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","import { detectDomainLocale } from \"../../shared/lib/i18n/detect-domain-locale\";\nimport { formatNextPathnameInfo } from \"../../shared/lib/router/utils/format-next-pathname-info\";\nimport { getHostname } from \"../../shared/lib/get-hostname\";\nimport { getNextPathnameInfo } from \"../../shared/lib/router/utils/get-next-pathname-info\";\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyzeUrl();\n    }\n    analyzeUrl() {\n        var ref, ref1, ref2, ref3, ref4;\n        const pathnameInfo = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        });\n        this[Internal].domainLocale = detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, getHostname(this[Internal].url, this[Internal].options.headers));\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = pathnameInfo.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\n        this[Internal].buildId = pathnameInfo.buildId;\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyzeUrl();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","const SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : undefined;\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nexport function serialize(c) {\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n        \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`, \n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\n/**\n * Parse a `Cookie` or `Set-Cookie header value\n */ export function parseCookieString(cookie) {\n    const map = new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const splitIndex = pair.indexOf(\"=\");\n        const key = pair.slice(0, splitIndex);\n        const value = pair.slice(splitIndex + 1);\n        map.set(key, decodeURIComponent(value ?? \"true\"));\n    }\n    return map;\n}\n/**\n * Parse a `Set-Cookie` header value\n */ export function parseSetCookieString(setCookie) {\n    if (!setCookie) {\n        return undefined;\n    }\n    const [[name, value], ...attributes] = parseCookieString(setCookie);\n    const { domain , expires , httponly , maxage , path , samesite , secure  } = Object.fromEntries(attributes.map(([key, v])=>[\n            key.toLowerCase(),\n            v\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        }\n    };\n    return compact(cookie);\n}\n\n//# sourceMappingURL=serialize.js.map","import { parseCookieString, serialize } from \"./serialize\";\n/**\n * A class for manipulating {@link Request} cookies (`Cookie` header).\n */ export class RequestCookies {\n    _parsed = new Map();\n    constructor(requestHeaders){\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookieString(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, v])=>serialize(v)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(/** Name or names of the cookies to be deleted  */ names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>serialize(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=request-cookies.js.map","import { parseSetCookieString, serialize } from \"./serialize\";\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = serialize(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1000);\n    }\n    if (cookie.path === null || cookie.path === undefined) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n/**\n * A class for manipulating {@link Response} cookies (`Set-Cookie` header).\n * Loose implementation of the experimental [Cookie Store API](https://wicg.github.io/cookie-store/#dictdef-cookie)\n * The main difference is `ResponseCookies` methods do not return a Promise.\n */ export class ResponseCookies {\n    _parsed = new Map();\n    constructor(responseHeaders){\n        this._headers = responseHeaders;\n        // @ts-expect-error See https://github.com/whatwg/fetch/issues/973\n        const headers = this._headers.getAll(\"set-cookie\");\n        for (const header of headers){\n            const parsed = parseSetCookieString(header);\n            if (parsed) {\n                this._parsed.set(parsed.name, parsed);\n            }\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter((c)=>c.name === key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this.set({\n            name,\n            value: \"\",\n            expires: new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=response-cookies.js.map","export { RequestCookies } from \"./request-cookies\";\nexport { ResponseCookies } from \"./response-cookies\";\n\n//# sourceMappingURL=index.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { RemovedUAError, RemovedPageError } from \"../error\";\nimport { RequestCookies } from \"./cookies\";\nexport const INTERNALS = Symbol(\"internal request\");\nexport class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            url: new NextURL(url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            })\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].url;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url.toString();\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { ResponseCookies } from \"./cookies\";\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nexport class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ export function relativizeURL(url, base) {\n    const baseURL = typeof base === 'string' ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n\n//# sourceMappingURL=relativize-url.js.map","const INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map","// remove (name) from pathname as it's not considered for routing\nexport function normalizeAppPath(pathname) {\n    return pathname.split('/').reduce((acc, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return acc;\n        }\n        if (segment.startsWith('(') && segment.endsWith(')')) {\n            return acc;\n        }\n        if (segment.startsWith('@')) {\n            return acc;\n        }\n        if (segment === 'page' && index === segments.length - 1) {\n            return acc;\n        }\n        return acc + `/${segment}`;\n    }, '');\n}\nexport function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, '') : pathname;\n}\n\n//# sourceMappingURL=app-paths.js.map","export const RSC = 'RSC';\nexport const NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree';\nexport const NEXT_ROUTER_PREFETCH = 'Next-Router-Prefetch';\nexport const FETCH_CACHE_HEADER = 'x-vercel-sc-headers';\nexport const RSC_VARY_HEADER = `${RSC}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH}`;\nexport const FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\n\n//# sourceMappingURL=app-router-headers.js.map","import { PageSignatureError } from \"./error\";\nimport { fromNodeHeaders } from \"./utils\";\nimport { NextFetchEvent } from \"./spec-extension/fetch-event\";\nimport { NextRequest } from \"./spec-extension/request\";\nimport { NextResponse } from \"./spec-extension/response\";\nimport { relativizeURL } from \"../../shared/lib/router/utils/relativize-url\";\nimport { waitUntilSymbol } from \"./spec-extension/fetch-event\";\nimport { NextURL } from \"./next-url\";\nimport { stripInternalSearchParams } from \"../internal-utils\";\nimport { normalizeRscPath } from \"../../shared/lib/router/utils/app-paths\";\nimport { FETCH_CACHE_HEADER, NEXT_ROUTER_PREFETCH, NEXT_ROUTER_STATE_TREE, RSC } from \"../../client/components/app-router-headers\";\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ],\n    [\n        FETCH_CACHE_HEADER\n    ], \n];\nexport async function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            requestHeaders.delete(param.toString().toLowerCase());\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ if (isDataReq) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizeURL(String(rewriteUrl), String(requestUrl)));\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    return {\n        response: response || NextResponse.next(),\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nexport function enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n}\n\n//# sourceMappingURL=adapter.js.map"],"names":["next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_0__","g","mod","__webpack_require__","handler","middleware","default","__WEBPACK_DEFAULT_EXPORT__","opts","V","page","OpenAIModel","createParser","onParse","isFirstChunk","buffer","startingPosition","startingFieldLength","eventId","eventName","data","reset","feed","chunk","hasBom","slice","BOM","length","position","discardTrailingNewline","character","lineLength","fieldLength","index","parseEventStreamLine","lineBuffer","type","id","event","noValue","field","step","valueLength","value","toString","concat","includes","retry","parseInt","Number","isNaN","DAVINCI_TURBO","every","charCode","charCodeAt","OpenAIStream","messages","encoder","TextEncoder","decoder","TextDecoder","res","fetch","headers","Authorization","process","env","OPENAI_API_KEY","method","body","JSON","stringify","model","role","content","max_tokens","temperature","stream","status","ReadableStream","start","controller","close","json","parse","text","choices","delta","queue","encode","enqueue","e","error","parser","decode","config","runtime","req","charCount","messagesToSend","i","message","push","Response","console","chat","PageSignatureError","Error","constructor","RemovedPageError","RemovedUAError","fromNodeHeaders","object","Headers","key","Object","entries","values","Array","isArray","v","undefined","append","splitCookiesString","cookiesString","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","test","charAt","substring","toNodeHeaders","result","toLowerCase","validateURL","url","String","URL","cause","responseSymbol","Symbol","passThroughSymbol","waitUntilSymbol","FetchEvent","_request","respondWith","response","Promise","resolve","passThroughOnException","waitUntil","promise","NextFetchEvent","params","request","sourcePage","detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","item","ref","ref1","domainHostname","domain","split","defaultLocale","locales","some","locale","removeTrailingSlash","route","replace","parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","query","hash","addPathPrefix","prefix","startsWith","addPathSuffix","suffix","pathHasPrefix","addLocale","ignorePrefix","formatNextPathnameInfo","info","buildId","trailingSlash","basePath","endsWith","getHostname","parsed","host","normalizeLocalePath","pathnameParts","splice","join","removePathPrefix","withoutPrefix","getNextPathnameInfo","options","_nextConfig","i18n","nextConfig","parseData","paths","pathLocale","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","NextURL","input","baseOrOpts","analyzeUrl","ref2","ref3","ref4","pathnameInfo","domainLocale","domains","formatPathname","forceLocale","formatSearch","search","ref5","searchParams","port","protocol","href","origin","password","username","toJSON","for","clone","SAME_SITE","parseSameSite","string","compact","t","newT","serialize","c","attrs","expires","toUTCString","maxAge","secure","httpOnly","sameSite","filter","Boolean","name","encodeURIComponent","parseCookieString","cookie","map","Map","pair","splitIndex","set","decodeURIComponent","parseSetCookieString","setCookie","attributes","httponly","maxage","samesite","fromEntries","Date","RequestCookies","_parsed","requestHeaders","_headers","header","get","iterator","size","args","getAll","all","from","_","n","has","delete","names","clear","keys","bag","serialized","normalizeCookie","now","ResponseCookies","responseHeaders","INTERNALS","NextRequest","Request","init","cookies","geo","ip","nextUrl","bodyUsed","cache","credentials","destination","integrity","keepalive","mode","redirect","referrer","referrerPolicy","signal","ua","response_INTERNALS","REDIRECTS","Set","handleMiddlewareField","NextResponse","ok","redirected","statusText","initObj","rewrite","next","relativizeURL","baseURL","relative","INTERNAL_QUERY_NAMES","EXTENDED_INTERNAL_QUERY_NAMES","stripInternalSearchParams","extended","normalizeRscPath","enabled","NextRequestHint","adapter_FLIGHT_PARAMETERS","adapter","isEdgeRendering","self","__BUILD_MANIFEST","requestUrl","isDataReq","param","defineProperty","enumerable","rewriteUrl","redirectURL","getUnsupportedModuleErrorMessage","module","__import_unsupported","moduleName","proxy","Proxy","_obj","prop","construct","apply","_target","_this","enhanceGlobals","globalThis","configurable"],"sourceRoot":""}