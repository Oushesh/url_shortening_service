{"version":3,"file":"pages/api/fetch_heroku_stream.js","mappings":"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","sources":["webpack://_N_E/?2c8c","webpack://_N_E/./pages/api/fetch_heroku_stream.ts","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/serialize.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/request-cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/response-cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/app-router-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/<anon>"],"sourcesContent":["\n        import { adapter, enhanceGlobals } from 'next/dist/esm/server/web/adapter'\n\n        enhanceGlobals()\n\n        var mod = require(\"private-next-pages/api/fetch_heroku_stream.ts\")\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/fetch_heroku_stream\" must export a `default` function');\n        }\n\n        export default function (opts) {\n          return adapter({\n              ...opts,\n              page: \"/api/fetch_heroku_stream\",\n              handler,\n          })\n        }\n    ","// Oushesh\nimport { Message } from \"@/types\";\nimport { OpenAIStream } from \"@/utils\";\n\nexport const config = {\n  runtime: \"edge\",\n};\n\nconst fetchMessages = async (username: string): Promise<string> => {\n  try {\n    const response = await fetch(\n      `https://d-sinclair-gpt.herokuapp.com/api/dataconnectors/twitter?username=${username}`\n    );\n    const data = await response.json();\n    return data.text;\n  } catch (error) {\n    console.error(\"Error fetching messages:\", error);\n    return \"\";\n  }\n};\n\nconst sendTextInStream = async (\n  messages: string[],\n  controller: ReadableStreamDefaultController<string>\n) => {\n  const lineDelay = 1000; // Adjust the delay (in milliseconds) between lines as needed\n  const messageDelay = 2000; // Adjust the delay (in milliseconds) between messages as needed\n\n  for (const message of messages) {\n    const lines = message.split('\\n');\n    for (const line of lines) {\n      await new Promise((resolve) => setTimeout(resolve, lineDelay));\n      controller.enqueue(line + \"\\n\");\n    }\n    // Add \"...\" and delay between messages\n    await new Promise((resolve) => setTimeout(resolve, messageDelay));\n    controller.enqueue(\"...\\n\\n\");\n  }\n  controller.close();\n};\n\nconst handler = async (req: Request): Promise<Response> => {\n  try {\n    // I need to pass those parameters\n    const username = \"SahilBloom\";\n    const text = await fetchMessages(username);\n\n    const charLimit = 12000;\n    let charCount = 0;\n    let messagesToSend = \"\";\n\n    for (const char of text) {\n      if (charCount + 1 > charLimit) {\n        break;\n      }\n      charCount++;\n      messagesToSend += char;\n    }\n\n    // Split the fetched messages into separate messages based on a double newline\n    const messages = messagesToSend.split('\\n\\n');\n\n    // Create a ReadableStream to send messages in a stream\n    const stream = new ReadableStream<string>({\n      start(controller) {\n        sendTextInStream(messages, controller);\n      },\n    });\n\n    // Return a new response with the stream\n    return new Response(stream, { headers: { \"Content-Type\": \"text/plain\" } });\n  } catch (error) {\n    console.log(error);\n    return new Response(\"Error\", { status: 500 });\n  }\n};\n\nexport default handler;\n","export class PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export function fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (v !== undefined) {\n                headers.append(key, v);\n            }\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nexport function toNodeHeaders(headers) {\n    const result = {};\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            result[key] = value;\n            if (key.toLowerCase() === \"set-cookie\") {\n                result[key] = splitCookiesString(value);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { PageSignatureError } from \"../error\";\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nexport const waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","export function detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ export function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ export function parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","import { parsePath } from './parse-path';\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ export function addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","import { parsePath } from './parse-path';\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ export function addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","import { parsePath } from './parse-path';\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ export function pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","import { addPathPrefix } from './add-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ export function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    if (locale && locale !== defaultLocale && (ignorePrefix || !pathHasPrefix(path.toLowerCase(), `/${locale.toLowerCase()}`) && !pathHasPrefix(path.toLowerCase(), '/api'))) {\n        return addPathPrefix(path, `/${locale}`);\n    }\n    return path;\n}\n\n//# sourceMappingURL=add-locale.js.map","import { removeTrailingSlash } from './remove-trailing-slash';\nimport { addPathPrefix } from './add-path-prefix';\nimport { addPathSuffix } from './add-path-suffix';\nimport { addLocale } from './add-locale';\nexport function formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ export function getHostname(parsed, headers) {\n    var ref;\n    return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(':')[0].toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ export function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","import { pathHasPrefix } from './path-has-prefix';\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ export function removePathPrefix(path, prefix) {\n    if (pathHasPrefix(path, prefix)) {\n        const withoutPrefix = path.slice(prefix.length);\n        return withoutPrefix.startsWith('/') ? withoutPrefix : `/${withoutPrefix}`;\n    }\n    return path;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","import { normalizeLocalePath } from '../../i18n/normalize-locale-path';\nimport { removePathPrefix } from './remove-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\nexport function getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","import { detectDomainLocale } from \"../../shared/lib/i18n/detect-domain-locale\";\nimport { formatNextPathnameInfo } from \"../../shared/lib/router/utils/format-next-pathname-info\";\nimport { getHostname } from \"../../shared/lib/get-hostname\";\nimport { getNextPathnameInfo } from \"../../shared/lib/router/utils/get-next-pathname-info\";\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyzeUrl();\n    }\n    analyzeUrl() {\n        var ref, ref1, ref2, ref3, ref4;\n        const pathnameInfo = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        });\n        this[Internal].domainLocale = detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, getHostname(this[Internal].url, this[Internal].options.headers));\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = pathnameInfo.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\n        this[Internal].buildId = pathnameInfo.buildId;\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyzeUrl();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","const SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : undefined;\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nexport function serialize(c) {\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n        \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`, \n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\n/**\n * Parse a `Cookie` or `Set-Cookie header value\n */ export function parseCookieString(cookie) {\n    const map = new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const splitIndex = pair.indexOf(\"=\");\n        const key = pair.slice(0, splitIndex);\n        const value = pair.slice(splitIndex + 1);\n        map.set(key, decodeURIComponent(value ?? \"true\"));\n    }\n    return map;\n}\n/**\n * Parse a `Set-Cookie` header value\n */ export function parseSetCookieString(setCookie) {\n    if (!setCookie) {\n        return undefined;\n    }\n    const [[name, value], ...attributes] = parseCookieString(setCookie);\n    const { domain , expires , httponly , maxage , path , samesite , secure  } = Object.fromEntries(attributes.map(([key, v])=>[\n            key.toLowerCase(),\n            v\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        }\n    };\n    return compact(cookie);\n}\n\n//# sourceMappingURL=serialize.js.map","import { parseCookieString, serialize } from \"./serialize\";\n/**\n * A class for manipulating {@link Request} cookies (`Cookie` header).\n */ export class RequestCookies {\n    _parsed = new Map();\n    constructor(requestHeaders){\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookieString(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, v])=>serialize(v)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(/** Name or names of the cookies to be deleted  */ names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>serialize(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=request-cookies.js.map","import { parseSetCookieString, serialize } from \"./serialize\";\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = serialize(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1000);\n    }\n    if (cookie.path === null || cookie.path === undefined) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n/**\n * A class for manipulating {@link Response} cookies (`Set-Cookie` header).\n * Loose implementation of the experimental [Cookie Store API](https://wicg.github.io/cookie-store/#dictdef-cookie)\n * The main difference is `ResponseCookies` methods do not return a Promise.\n */ export class ResponseCookies {\n    _parsed = new Map();\n    constructor(responseHeaders){\n        this._headers = responseHeaders;\n        // @ts-expect-error See https://github.com/whatwg/fetch/issues/973\n        const headers = this._headers.getAll(\"set-cookie\");\n        for (const header of headers){\n            const parsed = parseSetCookieString(header);\n            if (parsed) {\n                this._parsed.set(parsed.name, parsed);\n            }\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var ref;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (ref = args[0]) == null ? void 0 : ref.name;\n        return all.filter((c)=>c.name === key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this.set({\n            name,\n            value: \"\",\n            expires: new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n}\n\n//# sourceMappingURL=response-cookies.js.map","export { RequestCookies } from \"./request-cookies\";\nexport { ResponseCookies } from \"./response-cookies\";\n\n//# sourceMappingURL=index.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { RemovedUAError, RemovedPageError } from \"../error\";\nimport { RequestCookies } from \"./cookies\";\nexport const INTERNALS = Symbol(\"internal request\");\nexport class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            url: new NextURL(url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            })\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].url;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url.toString();\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { ResponseCookies } from \"./cookies\";\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nexport class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ export function relativizeURL(url, base) {\n    const baseURL = typeof base === 'string' ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n\n//# sourceMappingURL=relativize-url.js.map","const INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map","// remove (name) from pathname as it's not considered for routing\nexport function normalizeAppPath(pathname) {\n    return pathname.split('/').reduce((acc, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return acc;\n        }\n        if (segment.startsWith('(') && segment.endsWith(')')) {\n            return acc;\n        }\n        if (segment.startsWith('@')) {\n            return acc;\n        }\n        if (segment === 'page' && index === segments.length - 1) {\n            return acc;\n        }\n        return acc + `/${segment}`;\n    }, '');\n}\nexport function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, '') : pathname;\n}\n\n//# sourceMappingURL=app-paths.js.map","export const RSC = 'RSC';\nexport const NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree';\nexport const NEXT_ROUTER_PREFETCH = 'Next-Router-Prefetch';\nexport const FETCH_CACHE_HEADER = 'x-vercel-sc-headers';\nexport const RSC_VARY_HEADER = `${RSC}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH}`;\nexport const FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\n\n//# sourceMappingURL=app-router-headers.js.map","import { PageSignatureError } from \"./error\";\nimport { fromNodeHeaders } from \"./utils\";\nimport { NextFetchEvent } from \"./spec-extension/fetch-event\";\nimport { NextRequest } from \"./spec-extension/request\";\nimport { NextResponse } from \"./spec-extension/response\";\nimport { relativizeURL } from \"../../shared/lib/router/utils/relativize-url\";\nimport { waitUntilSymbol } from \"./spec-extension/fetch-event\";\nimport { NextURL } from \"./next-url\";\nimport { stripInternalSearchParams } from \"../internal-utils\";\nimport { normalizeRscPath } from \"../../shared/lib/router/utils/app-paths\";\nimport { FETCH_CACHE_HEADER, NEXT_ROUTER_PREFETCH, NEXT_ROUTER_STATE_TREE, RSC } from \"../../client/components/app-router-headers\";\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ],\n    [\n        FETCH_CACHE_HEADER\n    ], \n];\nexport async function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            requestHeaders.delete(param.toString().toLowerCase());\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ if (isDataReq) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizeURL(String(rewriteUrl), String(requestUrl)));\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    return {\n        response: response || NextResponse.next(),\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nexport function enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n}\n\n//# sourceMappingURL=adapter.js.map"],"names":["next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_0__","g","mod","__webpack_require__","handler","middleware","default","__WEBPACK_DEFAULT_EXPORT__","opts","V","page","config","runtime","fetchMessages","username","response","fetch","data","json","text","error","console","sendTextInStream","messages","controller","message","lines","split","line","Promise","setTimeout","resolve","enqueue","close","req","charCount","messagesToSend","char","stream","ReadableStream","start","Response","headers","log","status","PageSignatureError","Error","constructor","RemovedPageError","RemovedUAError","fromNodeHeaders","object","Headers","key","value","Object","entries","values","Array","isArray","v","undefined","append","splitCookiesString","cookiesString","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","length","test","charAt","push","substring","toNodeHeaders","result","toLowerCase","validateURL","url","String","URL","cause","responseSymbol","Symbol","passThroughSymbol","waitUntilSymbol","FetchEvent","_request","respondWith","passThroughOnException","waitUntil","promise","NextFetchEvent","params","request","sourcePage","detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","item","ref","ref1","domainHostname","domain","defaultLocale","locales","some","locale","removeTrailingSlash","route","replace","parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","query","hash","slice","addPathPrefix","prefix","startsWith","addPathSuffix","suffix","pathHasPrefix","addLocale","ignorePrefix","formatNextPathnameInfo","info","buildId","trailingSlash","basePath","endsWith","getHostname","parsed","host","normalizeLocalePath","pathnameParts","splice","join","removePathPrefix","withoutPrefix","getNextPathnameInfo","options","_nextConfig","i18n","nextConfig","parseData","paths","pathLocale","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","NextURL","input","baseOrOpts","analyzeUrl","ref2","ref3","ref4","pathnameInfo","domainLocale","domains","formatPathname","forceLocale","formatSearch","search","ref5","includes","searchParams","port","protocol","href","origin","password","toString","toJSON","for","clone","SAME_SITE","parseSameSite","string","compact","t","newT","serialize","c","attrs","expires","toUTCString","maxAge","secure","httpOnly","sameSite","filter","Boolean","name","encodeURIComponent","parseCookieString","cookie","map","Map","pair","splitIndex","set","decodeURIComponent","parseSetCookieString","setCookie","attributes","httponly","maxage","samesite","fromEntries","Date","Number","RequestCookies","_parsed","requestHeaders","_headers","header","get","iterator","size","args","getAll","all","from","_","n","has","delete","names","clear","keys","JSON","stringify","bag","serialized","normalizeCookie","now","ResponseCookies","responseHeaders","INTERNALS","NextRequest","Request","init","cookies","geo","ip","nextUrl","bodyUsed","cache","credentials","destination","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","ua","response_INTERNALS","REDIRECTS","Set","handleMiddlewareField","NextResponse","body","ok","redirected","statusText","type","initObj","rewrite","next","relativizeURL","baseURL","relative","INTERNAL_QUERY_NAMES","EXTENDED_INTERNAL_QUERY_NAMES","stripInternalSearchParams","extended","normalizeRscPath","enabled","NextRequestHint","adapter_FLIGHT_PARAMETERS","adapter","isEdgeRendering","self","__BUILD_MANIFEST","requestUrl","isDataReq","param","defineProperty","enumerable","event","rewriteUrl","redirectURL","getUnsupportedModuleErrorMessage","module","__import_unsupported","moduleName","proxy","Proxy","_obj","prop","construct","apply","_target","_this","enhanceGlobals","process","env","globalThis","configurable"],"sourceRoot":""}